//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input Map.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMap: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input Map"",
    ""maps"": [
        {
            ""name"": ""Player3D"",
            ""id"": ""28731e29-7b1d-4679-bd29-a83a625955b4"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""f2770d4e-1dbd-495d-a6c9-71bd204fdf5d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""7b4a57c6-e264-4f90-903e-9966ff240b67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LookMouse"",
                    ""type"": ""Value"",
                    ""id"": ""6070cb0f-a871-49d6-9ba3-939128bfec85"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LookGP"",
                    ""type"": ""Value"",
                    ""id"": ""19d2b81c-1324-4fcf-a5a9-87ea217c9578"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InventoryMenu"",
                    ""type"": ""Button"",
                    ""id"": ""cebdb519-2f09-4d8a-92b1-d985d55de7f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""2c5242fe-be21-4877-83f3-303212950bf6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4ee3bfac-9bd6-406b-b7fd-4765b398e2f8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""661b4f65-8caa-4384-a974-b98da3102468"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""385d9f71-16a8-41e1-a159-61f4edd5184c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bd99ec7b-30e4-43cb-8ff3-90e9303b1062"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bcbd57a1-9ec7-4afa-8d06-259d3c42f06a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffa3d783-3632-4241-9a70-20c4dcd4b0ef"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f42c274-e2cb-43e0-be66-92dd168474d0"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5433a0c-da35-4236-8496-23b1430ff2ee"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""211a8599-f338-4c9c-bfe4-0f2a1c163a37"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookGP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f692335a-8069-4edf-b453-efd6e7f4d1d2"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InventoryMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player3D
        m_Player3D = asset.FindActionMap("Player3D", throwIfNotFound: true);
        m_Player3D_Movement = m_Player3D.FindAction("Movement", throwIfNotFound: true);
        m_Player3D_Interact = m_Player3D.FindAction("Interact", throwIfNotFound: true);
        m_Player3D_LookMouse = m_Player3D.FindAction("LookMouse", throwIfNotFound: true);
        m_Player3D_LookGP = m_Player3D.FindAction("LookGP", throwIfNotFound: true);
        m_Player3D_InventoryMenu = m_Player3D.FindAction("InventoryMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player3D
    private readonly InputActionMap m_Player3D;
    private List<IPlayer3DActions> m_Player3DActionsCallbackInterfaces = new List<IPlayer3DActions>();
    private readonly InputAction m_Player3D_Movement;
    private readonly InputAction m_Player3D_Interact;
    private readonly InputAction m_Player3D_LookMouse;
    private readonly InputAction m_Player3D_LookGP;
    private readonly InputAction m_Player3D_InventoryMenu;
    public struct Player3DActions
    {
        private @InputMap m_Wrapper;
        public Player3DActions(@InputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player3D_Movement;
        public InputAction @Interact => m_Wrapper.m_Player3D_Interact;
        public InputAction @LookMouse => m_Wrapper.m_Player3D_LookMouse;
        public InputAction @LookGP => m_Wrapper.m_Player3D_LookGP;
        public InputAction @InventoryMenu => m_Wrapper.m_Player3D_InventoryMenu;
        public InputActionMap Get() { return m_Wrapper.m_Player3D; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player3DActions set) { return set.Get(); }
        public void AddCallbacks(IPlayer3DActions instance)
        {
            if (instance == null || m_Wrapper.m_Player3DActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player3DActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @LookMouse.started += instance.OnLookMouse;
            @LookMouse.performed += instance.OnLookMouse;
            @LookMouse.canceled += instance.OnLookMouse;
            @LookGP.started += instance.OnLookGP;
            @LookGP.performed += instance.OnLookGP;
            @LookGP.canceled += instance.OnLookGP;
            @InventoryMenu.started += instance.OnInventoryMenu;
            @InventoryMenu.performed += instance.OnInventoryMenu;
            @InventoryMenu.canceled += instance.OnInventoryMenu;
        }

        private void UnregisterCallbacks(IPlayer3DActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @LookMouse.started -= instance.OnLookMouse;
            @LookMouse.performed -= instance.OnLookMouse;
            @LookMouse.canceled -= instance.OnLookMouse;
            @LookGP.started -= instance.OnLookGP;
            @LookGP.performed -= instance.OnLookGP;
            @LookGP.canceled -= instance.OnLookGP;
            @InventoryMenu.started -= instance.OnInventoryMenu;
            @InventoryMenu.performed -= instance.OnInventoryMenu;
            @InventoryMenu.canceled -= instance.OnInventoryMenu;
        }

        public void RemoveCallbacks(IPlayer3DActions instance)
        {
            if (m_Wrapper.m_Player3DActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer3DActions instance)
        {
            foreach (var item in m_Wrapper.m_Player3DActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player3DActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player3DActions @Player3D => new Player3DActions(this);
    public interface IPlayer3DActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnLookMouse(InputAction.CallbackContext context);
        void OnLookGP(InputAction.CallbackContext context);
        void OnInventoryMenu(InputAction.CallbackContext context);
    }
}
